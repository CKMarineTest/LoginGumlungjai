{"ast":null,"code":"import { ref, onMounted, watch, computed } from 'vue';\nimport SidebarComponent from './Menu/SidebarComponent.vue';\nimport gsap from 'gsap';\nexport default {\n  __name: 'DashBoardComponent',\n  props: {\n    value: {\n      type: Number,\n      required: true\n    },\n    duration: {\n      type: Number,\n      default: 2\n    }\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const props = __props;\n    const numberRef = ref(null);\n    const displayNumber = ref(0);\n    const animateNumber = () => {\n      gsap.to(displayNumber, {\n        duration: props.duration,\n        value: props.value,\n        ease: 'power1.out',\n        onUpdate: () => {\n          displayNumber.value = Math.round(gsap.getProperty(displayNumber, \"value\"));\n        }\n      });\n    };\n    const formatNumber = computed(() => displayNumber.value.toLocaleString());\n    onMounted(() => {\n      animateNumber();\n    });\n    watch(() => props.value, () => {\n      animateNumber();\n    });\n    const influencers = ref([{\n      name: 'Malie Wewoho',\n      projects: 23,\n      followers: '1,620,208',\n      avatar: '/placeholders/avatar1.jpg'\n    }, {\n      name: 'Nancy Aulia',\n      projects: 34,\n      followers: '1,224,820',\n      avatar: '/placeholders/avatar2.jpg'\n    }, {\n      name: 'Natasha Viresta',\n      projects: 12,\n      followers: '1,105,549',\n      avatar: '/placeholders/avatar3.jpg'\n    }, {\n      name: 'Wilona Hamda',\n      projects: 8,\n      followers: '927,423',\n      avatar: '/placeholders/avatar4.jpg'\n    }, {\n      name: 'Reva Nanda',\n      projects: 10,\n      followers: '827,810',\n      avatar: '/placeholders/avatar5.jpg'\n    }]);\n    const mapData = ref({\n      regions: [{\n        id: 'US',\n        value: 87152\n      }, {\n        id: 'EU',\n        value: 65089\n      }, {\n        id: 'AS',\n        value: 120504\n      }]\n    });\n    const __returned__ = {\n      props,\n      numberRef,\n      displayNumber,\n      animateNumber,\n      formatNumber,\n      influencers,\n      mapData,\n      ref,\n      onMounted,\n      watch,\n      computed,\n      SidebarComponent,\n      get gsap() {\n        return gsap;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","computed","SidebarComponent","gsap","props","__props","numberRef","displayNumber","animateNumber","to","duration","value","ease","onUpdate","Math","round","getProperty","formatNumber","toLocaleString","influencers","name","projects","followers","avatar","mapData","regions","id"],"sources":["D:/1.My Work/21.Git Hub Source Code/LoginGumlungjai/src/components/DashBoardComponent.vue"],"sourcesContent":["<template>\r\n    <div class=\"flex\">\r\n        <aside class=\"w-16 h-screen fixed left-0 bg-gray-900\">\r\n            <SidebarComponent />\r\n        </aside>\r\n\r\n        <main class=\"flex-1 ml-16 p-6 bg-gray-50\">\r\n            <br>\r\n            <br>\r\n            <div class=\"grid grid-cols-12 gap-6 mb-6\">\r\n                <div class=\"bg-white p-4 rounded-lg shadow\">\r\n                    <div class=\"flex items-center  justify-between\">\r\n                        <div>\r\n                            <p class=\"text-lg text-gray-500\">à¸ˆà¸³à¸™à¸§à¸™à¸œà¸¹à¹‰à¸ªà¸¡à¸±à¸„à¸£</p>\r\n                            <span class=\"text-2xl font-semibold\" ref=\"numberRef\">{{ formatNumber }}</span>\r\n                        </div>\r\n                        <div class=\"p-2 bg-blue-100 rounded-lg\">\r\n                            <span class=\"text-blue-500\">ðŸ“„</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n            </div>\r\n\r\n            <div class=\"bg-white p-4 rounded-lg shadow mb-6\">\r\n                <div class=\"flex justify-between items-center mb-4\">\r\n                    <div>\r\n                        <h2 class=\"text-lg font-semibold\">Campaign Reach</h2>\r\n                        <div class=\"flex gap-4 mt-2\">\r\n                            <div class=\"flex items-center gap-2\">\r\n                                <span class=\"w-2 h-2 rounded-full bg-blue-500\"></span>\r\n                                <p class=\"text-sm text-gray-500\">12 country</p>\r\n                            </div>\r\n                            <div class=\"flex items-center gap-2\">\r\n                                <span class=\"w-2 h-2 rounded-full bg-green-500\"></span>\r\n                                <p class=\"text-sm text-gray-500\">180,807,839 user</p>\r\n                            </div>\r\n                            <div class=\"flex items-center gap-2\">\r\n                                <span class=\"w-2 h-2 rounded-full bg-purple-500\"></span>\r\n                                <p class=\"text-sm text-gray-500\">9 month</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button class=\"px-4 py-2 text-blue-500 text-sm hover:bg-blue-50 rounded-lg transition-colors duration-200\">\r\n                        <span class=\"mr-2\">ðŸ”„</span>\r\n                        Click to refresh\r\n                    </button>\r\n                </div>\r\n                <WorldMap class=\"h-64 w-full\" :mapData=\"mapData\" />\r\n            </div>\r\n\r\n            <div class=\"grid grid-cols-12 gap-6\">\r\n                <div class=\"col-span-4 bg-white p-4 rounded-lg shadow\">\r\n                    <div class=\"flex justify-between items-center mb-4\">\r\n                        <h3 class=\"font-semibold\">User</h3>\r\n                    </div>\r\n                    <div class=\"space-y-4\">\r\n                        <div v-for=\"influencer in influencers\" :key=\"influencer.name\" \r\n                             class=\"flex items-center justify-between p-2 hover:bg-gray-50 rounded-lg transition-colors duration-200\">\r\n                            <div class=\"flex items-center gap-3\">\r\n                                <div class=\"w-10 h-10 bg-gray-200 rounded-full overflow-hidden\">\r\n                                    <img :src=\"influencer.avatar\" alt=\"\" class=\"w-full h-full object-cover\" />\r\n                                </div>\r\n                                <div>\r\n                                    <p class=\"font-medium\">{{ influencer.name }}</p>\r\n                                    <p class=\"text-sm text-gray-500\">{{ influencer.projects }} Projects</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-span-4 bg-white p-4 rounded-lg shadow\">\r\n                    <h3 class=\"font-semibold mb-4\">Audience Age & Gender</h3>\r\n                </div>\r\n\r\n                <div class=\"col-span-4 bg-white p-4 rounded-lg shadow\">\r\n                    <h3 class=\"font-semibold mb-4\">Follower Interest</h3>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, watch, defineProps, computed } from 'vue';\r\nimport SidebarComponent from './Menu/SidebarComponent.vue';\r\n\r\nimport gsap from 'gsap';\r\n\r\nconst props = defineProps({\r\n    value: {\r\n        type: Number,\r\n        required: true\r\n    },\r\n    duration: {\r\n        type: Number,\r\n        default: 2\r\n    }\r\n});\r\n\r\nconst numberRef = ref(null);\r\nconst displayNumber = ref(0);\r\n\r\nconst animateNumber = () => {\r\n    gsap.to(displayNumber, {\r\n        duration: props.duration,\r\n        value: props.value,\r\n        ease: 'power1.out',\r\n        onUpdate: () => {\r\n            displayNumber.value = Math.round(gsap.getProperty(displayNumber, \"value\"));\r\n        }\r\n    });\r\n};\r\n\r\nconst formatNumber = computed(() => displayNumber.value.toLocaleString());\r\n\r\n\r\n\r\nonMounted(() => {\r\n    animateNumber();\r\n});\r\n\r\nwatch(() => props.value, () => {\r\n    animateNumber();\r\n})\r\n\r\nconst influencers = ref([\r\n    { \r\n        name: 'Malie Wewoho', \r\n        projects: 23, \r\n        followers: '1,620,208',\r\n        avatar: '/placeholders/avatar1.jpg'\r\n    },\r\n    { \r\n        name: 'Nancy Aulia', \r\n        projects: 34, \r\n        followers: '1,224,820',\r\n        avatar: '/placeholders/avatar2.jpg'\r\n    },\r\n    { \r\n        name: 'Natasha Viresta', \r\n        projects: 12, \r\n        followers: '1,105,549',\r\n        avatar: '/placeholders/avatar3.jpg'\r\n    },\r\n    { \r\n        name: 'Wilona Hamda', \r\n        projects: 8, \r\n        followers: '927,423',\r\n        avatar: '/placeholders/avatar4.jpg'\r\n    },\r\n    { \r\n        name: 'Reva Nanda', \r\n        projects: 10, \r\n        followers: '827,810',\r\n        avatar: '/placeholders/avatar5.jpg'\r\n    }\r\n])\r\n\r\nconst mapData = ref({\r\n    regions: [\r\n        { id: 'US', value: 87152 },\r\n        { id: 'EU', value: 65089 },\r\n        { id: 'AS', value: 120504 },\r\n    ]\r\n})\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.transition-colors {\r\n    transition: background-color 0.2s ease;\r\n}\r\n\r\n/* Custom scrollbar for the influencer list */\r\n.space-y-4 {\r\n    max-height: calc(100vh - 300px);\r\n    overflow-y: auto;\r\n    scrollbar-width: thin;\r\n    scrollbar-color: #E5E7EB transparent;\r\n}\r\n\r\n.space-y-4::-webkit-scrollbar {\r\n    width: 6px;\r\n}\r\n\r\n.space-y-4::-webkit-scrollbar-track {\r\n    background: transparent;\r\n}\r\n\r\n.space-y-4::-webkit-scrollbar-thumb {\r\n    background-color: #E5E7EB;\r\n    border-radius: 3px;\r\n}\r\n</style>"],"mappings":"AAsFA,SAASA,GAAG,EAAEC,SAAS,EAAEC,KAAkB,EAAEC,QAAQ,QAAQ,KAAK;AAClE,OAAOC,gBAAgB,MAAM,6BAA6B;AAE1D,OAAOC,IAAI,MAAM,MAAM;;;;;;;;;;;;;;;;;IAEvB,MAAMC,KAAK,GAAGC,OASZ;IAEF,MAAMC,SAAS,GAAGR,GAAG,CAAC,IAAI,CAAC;IAC3B,MAAMS,aAAa,GAAGT,GAAG,CAAC,CAAC,CAAC;IAE5B,MAAMU,aAAa,GAAGA,CAAA,KAAM;MACxBL,IAAI,CAACM,EAAE,CAACF,aAAa,EAAE;QACnBG,QAAQ,EAAEN,KAAK,CAACM,QAAQ;QACxBC,KAAK,EAAEP,KAAK,CAACO,KAAK;QAClBC,IAAI,EAAE,YAAY;QAClBC,QAAQ,EAAEA,CAAA,KAAM;UACZN,aAAa,CAACI,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACZ,IAAI,CAACa,WAAW,CAACT,aAAa,EAAE,OAAO,CAAC,CAAC;QAC9E;MACJ,CAAC,CAAC;IACN,CAAC;IAED,MAAMU,YAAY,GAAGhB,QAAQ,CAAC,MAAMM,aAAa,CAACI,KAAK,CAACO,cAAc,CAAC,CAAC,CAAC;IAIzEnB,SAAS,CAAC,MAAM;MACZS,aAAa,CAAC,CAAC;IACnB,CAAC,CAAC;IAEFR,KAAK,CAAC,MAAMI,KAAK,CAACO,KAAK,EAAE,MAAM;MAC3BH,aAAa,CAAC,CAAC;IACnB,CAAC,CAAC;IAEF,MAAMW,WAAW,GAAGrB,GAAG,CAAC,CACpB;MACIsB,IAAI,EAAE,cAAc;MACpBC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,WAAW;MACtBC,MAAM,EAAE;IACZ,CAAC,EACD;MACIH,IAAI,EAAE,aAAa;MACnBC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,WAAW;MACtBC,MAAM,EAAE;IACZ,CAAC,EACD;MACIH,IAAI,EAAE,iBAAiB;MACvBC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,WAAW;MACtBC,MAAM,EAAE;IACZ,CAAC,EACD;MACIH,IAAI,EAAE,cAAc;MACpBC,QAAQ,EAAE,CAAC;MACXC,SAAS,EAAE,SAAS;MACpBC,MAAM,EAAE;IACZ,CAAC,EACD;MACIH,IAAI,EAAE,YAAY;MAClBC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,SAAS;MACpBC,MAAM,EAAE;IACZ,CAAC,CACJ,CAAC;IAEF,MAAMC,OAAO,GAAG1B,GAAG,CAAC;MAChB2B,OAAO,EAAE,CACL;QAAEC,EAAE,EAAE,IAAI;QAAEf,KAAK,EAAE;MAAM,CAAC,EAC1B;QAAEe,EAAE,EAAE,IAAI;QAAEf,KAAK,EAAE;MAAM,CAAC,EAC1B;QAAEe,EAAE,EAAE,IAAI;QAAEf,KAAK,EAAE;MAAO,CAAC;IAEnC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}